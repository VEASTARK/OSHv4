package osh.mgmt.globalcontroller.jmetal.logging;

import org.uma.jmetal.algorithm.Algorithm;
import org.uma.jmetal.solution.Solution;
import osh.configuration.system.DeviceTypes;

import java.util.List;

/**
 * Interface for a logger for th EA-Algorithms.
 *
 */
public interface IEALogger {

    /**
     * Logs the start of a new algorithm execution.
     *
     * @param usedAlgorithm the started algorithm
     */
    void logStart(Algorithm<?> usedAlgorithm);

    /**
     * Logs the end of a new algorithm execution.
     *
     * @param bestSolution the result of the algorithm
     */
    void logEnd(Solution<?> bestSolution);

    /**
     * Logs the end of a new algorithm execution.
     *
     * @param bestSolutions the collection of results of the algorithm
     */
    void logEnd(List<? extends Solution<?>> bestSolutions);

    /**
     * Logs the state of the algorithm population during the execution.
     *
     * @param population the current population of the algorithm
     * @param generation the current generation of the algorithm
     */
    void logPopulation(List<? extends Solution<?>> population, int generation);

    /**
     * Logs additional information about the execution.
     * @param message the additional log message
     */
    void logAdditional(String message);

    /**
     * Shuts the logger down and commits all information to the database (if configured).
     */
    void shutdown();

    /**
     * Logs information about the cervisia generated by the problem-parts.
     *
     * @param type the type of the device that generated cervisia
     * @param cervisia the generated cervisia
     */
    void logCervisia(DeviceTypes type, double cervisia);
}
