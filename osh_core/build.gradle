sourceSets {
    main {
        java {
            srcDir 'datatypes_src'
            srcDir 'generated_src'
            srcDir 'generated_src_sim'
            srcDir 'osh_src'
            srcDir 'simulation_src'
            srcDir 'utils_src'
        }

        resources {
            srcDir 'data'
        }
    }
}

configurations {
    jaxb
}

dependencies {

    implementation group: 'com.jcraft', name: 'jsch'
    implementation group: 'it.unimi.dsi', name: 'fastutil'
    implementation group: 'javax.xml.bind', name: 'jaxb-api'
    implementation group: 'org.glassfish.jaxb', name: 'jaxb-core'
    implementation group: 'org.glassfish.jaxb', name: 'jaxb-xjc'
    implementation group: 'log4j', name: 'log4j'
    implementation group: 'mysql', name: 'mysql-connector-java'
    implementation group: 'org.eclipse.persistence', name: 'eclipselink'
    implementation group: 'org.reflections', name: 'reflections'

    jaxb(
            'org.glassfish.jaxb:jaxb-core',
            'org.glassfish.jaxb:jaxb-xjc',
    )
}

task generateXSDClasses {
    group = "Construction"

    System.setProperty('javax.xml.accessExternalSchema', 'all')
    def jaxbTargetDir = file("generated_src")
    def jaxbTargetDir2 = file("generated_src_sim")

    doLast {
        jaxbTargetDir.mkdirs()
        jaxbTargetDir2.mkdirs()

        ant.taskdef(
                name: 'xjc',
                classname: 'com.sun.tools.xjc.XJCTask',
                classpath: configurations.jaxb.asPath
        )
        ant.jaxbTargetDir = jaxbTargetDir

        ant.xjc(
                destdir: '${jaxbTargetDir}',
                schema: 'generated_src/CALConfiguration.xsd'
        )

        ant.xjc(
                destdir: '${jaxbTargetDir}',
                schema: 'generated_src/EALConfiguration.xsd'
        )

        ant.xjc(
                destdir: '${jaxbTargetDir}',
                schema: 'generated_src/OCConfiguration.xsd'
        )

        ant.xjc(
                destdir: '${jaxbTargetDir}',
                schema: 'generated_src/GridLayout.xsd'
        )

        ant.xjc(
                destdir: '${jaxbTargetDir}',
                schema: 'generated_src/XsdApplianceProgramConfigurations.xsd'
        )

        ant.xjc(
                destdir: '${jaxbTargetDir}',
                schema: 'generated_src/XsdMieleDeviceProfile.xsd'
        )

        ant.xjc(
                destdir: '${jaxbTargetDir}',
                schema: 'generated_src/OSHConfiguration.xsd'
        )

        ant.jaxbTargetDir = jaxbTargetDir2

        ant.xjc(
                destdir: '${jaxbTargetDir}',
                schema: 'generated_src_sim/Screenplay.xsd'
        )
    }
}

task constructGridConfiguration(type: JavaExec) {
    dependsOn compileJava
    group = "Construction"
    description = "constructs the energy grid configuration files"
    classpath = sourceSets.main.runtimeClasspath
    main = "osh.esc.grid.instances.GridInstance"
}