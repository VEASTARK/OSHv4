sourceSets {
    main {
        java {
            srcDir 'src'
        }

        resources {
            srcDir 'configfiles'
        }
    }
}

dependencies {
    implementation project(":osh_comdriver_gui")
    implementation project(":osh_comdriver_signals")
    implementation project(":osh_core")
    implementation project(":osh_driver_appliance")
    implementation project(":osh_driver_baseload")
    implementation project(":osh_driver_batterystorage")
    implementation project(":osh_driver_chp")
    implementation project(":osh_driver_chp_dachs")
    implementation project(":osh_driver_hvac")
    implementation project(":osh_driver_hvac_chiller_adsorption")
    implementation project(":osh_driver_hvac_heater_gas")
    implementation project(":osh_driver_hvac_heater_ihe")
    implementation project(":osh_driver_hvac_watertank")
    implementation project(":osh_driver_pv")
    implementation project(":osh_ems_ea")
    implementation project(":osh_en50523")
    implementation project(":osh_sim_builder")

    implementation group: 'javax.xml.bind', name: 'jaxb-api'
    implementation group: 'org.glassfish.jaxb', name: 'jaxb-core'
    implementation group: 'org.glassfish.jaxb', name: 'jaxb-xjc'
}

task runSingleHH(type: JavaExec) {
    dependsOn compileJava
    group = 'Execution'
    description = 'starts the single houshold local simulation'
    classpath = sourceSets.main.runtimeClasspath
    main = 'osh.runsimulation.runSimulationPackage'
}

task jarForRunSingleHH(type: Jar) {
    dependsOn configurations.runtimeClasspath
    group = 'Construction.Jar'
    description = 'creates an executable jar that runs the simulation and copies all configfiles to the output ' +
            'directory'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    doFirst {
        mkdir "$rootDir/out/runSingleHH"

        copy {
            from ("$rootDir/osh_sim_loader") {
                include "configfiles/**"
            }
            into "$rootDir/out/runSingleHH"

        }
    }

    manifest {
        attributes 'Main-Class': 'osh.runsimulation.runSimulationPackage'
    }
    archiveBaseName = 'runSingleHH'
    destinationDirectory = file("$rootDir/out/runSingleHH")
    from {configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }}
    with jar
}